{"ast":null,"code":"var _jsxFileName = \"/Users/tchevier3/Desktop/Github/Code-Crackdown/client/src/components/Register.jsx\",\n  _s = $RefreshSig$();\nimport { registerUser } from \"../services/internalApiService\";\nimport { useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const navigate = useNavigate();\n  const handleSubmit = e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(null);\n    let newUser = {\n      username: username,\n      password: password\n    };\n    registerUser(newUser).then(res => console.log(res)) // If successful, do something with the response. \n    .catch(err => {\n      const errorResponse = err.response.data.errors; // Get the errors from err.response.data\n      const errorArr = []; // Define a temp error array to push the messages in\n      for (const key of Object.keys(errorResponse)) {\n        // Loop through all errors and get the messages\n        errorArr.push(errorResponse[key].message);\n      }\n      // Set Errors\n      setErrors(errorArr);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mt-5 mb-5\",\n      style: {\n        fontSize: \"100px\",\n        color: \"white\"\n      },\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"input\",\n            className: \"form-label\",\n            style: {\n              fontSize: \"32px\",\n              color: \"white\"\n            },\n            children: \"Username: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger mt-3\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          onChange: e => setUsername(e.target.value),\n          value: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"input\",\n            className: \"form-label\",\n            style: {\n              fontSize: \"32px\",\n              color: \"white\"\n            },\n            children: \"Password: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          onChange: e => setPassword(e.target.value),\n          value: password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary mt-3\",\n          disabled: isLoading,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Register, \"xyxxr9icrgIflLLiD7Bax0Q4T1A=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["registerUser","useNavigate","useState","Register","username","setUsername","password","setPassword","error","setError","isLoading","setIsLoading","navigate","handleSubmit","e","preventDefault","newUser","then","res","console","log","catch","err","errorResponse","response","data","errors","errorArr","key","Object","keys","push","message","setErrors","fontSize","color","target","value"],"sources":["/Users/tchevier3/Desktop/Github/Code-Crackdown/client/src/components/Register.jsx"],"sourcesContent":["import { registerUser } from \"../services/internalApiService\"\nimport { useNavigate } from 'react-router-dom'\nimport { useState } from 'react'\n\nconst Register = () => {\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(null)\n\n    const navigate = useNavigate()\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        setIsLoading(true)\n        setError(null)\n        let newUser = { username: username, password: password }\n            registerUser(newUser)\n            .then(res=>console.log(res)) // If successful, do something with the response. \n            .catch(err=>{\n                const errorResponse = err.response.data.errors; // Get the errors from err.response.data\n                const errorArr = []; // Define a temp error array to push the messages in\n                for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\n                    errorArr.push(errorResponse[key].message)\n                }\n                // Set Errors\n                setErrors(errorArr);\n            })   \n    }\n    return (\n        <>\n        <h1 className=\"mt-5 mb-5\" style={{fontSize: \"100px\", color: \"white\"}}>Register</h1>\n            <div className=\"container\">\n                <form action=\"\" onSubmit={handleSubmit}>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"input\" className=\"form-label\" style={{fontSize: \"32px\", color: \"white\"}}>Username: </label>\n                    </div>\n                    {\n                        error && (\n                            <p className=\"text-danger mt-3\">{error}</p> \n                        )\n                    }\n                    <input type=\"text\" className=\"form-control\" onChange={(e) => setUsername(e.target.value)} value={username} />\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"input\" className=\"form-label\" style={{fontSize: \"32px\", color: \"white\"}}>Password: </label>\n                    </div>\n\n                    <input type=\"password\" className=\"form-control\" onChange={(e) => setPassword(e.target.value)} value={password} />\n                \n                    <button type=\"submit\" className=\"btn btn-primary mt-3\" disabled={isLoading}>Register</button>\n                </form>\n            </div>\n        </>\n    )\n\n}\nexport default Register"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}