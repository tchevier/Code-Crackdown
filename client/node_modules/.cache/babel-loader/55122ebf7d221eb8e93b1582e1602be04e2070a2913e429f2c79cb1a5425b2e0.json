{"ast":null,"code":"export const createCode = colors => {\n  let code = \"\";\n  while (code.length <= 3) {\n    let rand = Math.floor(Math.random() * colors.length);\n    if (!code.includes(colors[rand])) {\n      code += colors[rand];\n    }\n  }\n  return code;\n};\nexport const translateCode = code => {\n  let translatedCode = [];\n  for (let i = 0; i < code.length; i++) {\n    switch (code[i]) {\n      case \"b\":\n        translatedCode.push(\"blue\");\n        break;\n      case \"w\":\n        translatedCode.push(\"white\");\n        break;\n      case \"g\":\n        translatedCode.push(\"green\");\n        break;\n      case \"r\":\n        translatedCode.push(\"red\");\n        break;\n      case \"y\":\n        translatedCode.push(\"yellow\");\n        break;\n      case \"o\":\n        translatedCode.push(\"orange\");\n        break;\n    }\n  }\n  return translatedCode;\n};\nexport const calculateScore = (time, guesses) => {\n  let score = Math.round(1 / (time * guesses) * 1000) * 100;\n  return score;\n};\n// const validate = (guess, code) => {\n//     let validateGuess = \"\"\n//         if(guess.length != code.length){\n//             console.log(\"Guess was too long or too short, try again: \")\n//             return false\n//         }\n//         for(let i = 0; i < guess.length; i++){\n//             if(!colors.includes(guess[i])){\n//                 console.log(\"Please use proper color codes, try again: \")\n//                 return false\n//             }\n//             if(validateGuess.includes(guess[i])){\n//                 console.log(\"Please do not repeat a color, try again: \")\n//                 return false\n//             }\n//             validateGuess += guess[i]\n//         }\n//     return true\n// }\n// const game = (code) => {\n//     let tries = 10\n//     console.log(\"Guess the 4 digit code using the first characters from the following colors. (Blue(b), White(w), Green(g), Red(r), Yellow(y), and Orange(o)). \")\n//     console.log(\"Letters cannot be repeated in the guess or in the code. 10 TRIES!\")\n//     let guess = prompt(\"Guess: \").trim()\n//     if(guess == \"exit\"){\n//         clearTimeout()\n//     }\n//     while(guess != code){\n//         let whites = 0\n//         let blacks = 0\n\n//         while(validate(guess, code) == false){\n//             guess = prompt(\"Try Again: \")\n//         }\n\n//         for(let i = 0; i < code.length; i++){\n//             if(guess.includes(code[i])){\n//                 whites++\n//             }\n//             if(guess[i] === code[i]){\n//                 blacks++\n//             }\n//         }\n//         //if we have blacks, we dont need to count them as whites as well\n//         whites = whites - blacks\n//         tries--\n//         console.log(\"Whites: \" + whites)\n//         console.log(\"Blacks: \" + blacks)\n//         if(tries === 0){\n//             console.log(\"Sorry, you didn't guess the code in 10 tries!\")\n//             console.log(\"The code was \" + code + \", \" + translateCode(code))\n//             return\n//         }\n//         console.log(\"Tries left: \" + tries)\n//         guess = prompt(\"Guess: \").trim()\n//     }\n//     console.log(\"Congrats you guessed \" + translateCode(code))\n//     return\n// }","map":{"version":3,"names":["createCode","colors","code","length","rand","Math","floor","random","includes","translateCode","translatedCode","i","push","calculateScore","time","guesses","score","round"],"sources":["C:/Users/Tristian/Documents/GitHub/Code-Crackdown/client/src/game.js"],"sourcesContent":["export const createCode = (colors) => {\r\n    let code = \"\"\r\n    while(code.length <= 3){\r\n        let rand = Math.floor(Math.random() * colors.length)\r\n        if(!code.includes(colors[rand])){\r\n            code += colors[rand]\r\n        }\r\n    }\r\n    return code\r\n}\r\n\r\nexport const translateCode = (code) => {\r\n    let translatedCode = []\r\n    for(let i = 0; i < code.length; i++){\r\n        switch(code[i]){\r\n            case \"b\":\r\n                translatedCode.push(\"blue\")\r\n                break;\r\n            case \"w\":\r\n                translatedCode.push(\"white\")\r\n                break;\r\n            case \"g\":\r\n                translatedCode.push(\"green\")\r\n                break;\r\n            case \"r\":\r\n                translatedCode.push(\"red\")\r\n                break;\r\n            case \"y\":\r\n                translatedCode.push(\"yellow\")\r\n                break;\r\n            case \"o\":\r\n                translatedCode.push(\"orange\")\r\n                break;\r\n        }\r\n    }\r\n    return translatedCode\r\n}\r\nexport const calculateScore = (time, guesses) => {\r\n    let score = Math.round(1 / ((time * guesses)) * 1000) * 100\r\n    return score\r\n}\r\n// const validate = (guess, code) => {\r\n//     let validateGuess = \"\"\r\n//         if(guess.length != code.length){\r\n//             console.log(\"Guess was too long or too short, try again: \")\r\n//             return false\r\n//         }\r\n//         for(let i = 0; i < guess.length; i++){\r\n//             if(!colors.includes(guess[i])){\r\n//                 console.log(\"Please use proper color codes, try again: \")\r\n//                 return false\r\n//             }\r\n//             if(validateGuess.includes(guess[i])){\r\n//                 console.log(\"Please do not repeat a color, try again: \")\r\n//                 return false\r\n//             }\r\n//             validateGuess += guess[i]\r\n//         }\r\n//     return true\r\n// }\r\n// const game = (code) => {\r\n//     let tries = 10\r\n//     console.log(\"Guess the 4 digit code using the first characters from the following colors. (Blue(b), White(w), Green(g), Red(r), Yellow(y), and Orange(o)). \")\r\n//     console.log(\"Letters cannot be repeated in the guess or in the code. 10 TRIES!\")\r\n//     let guess = prompt(\"Guess: \").trim()\r\n//     if(guess == \"exit\"){\r\n//         clearTimeout()\r\n//     }\r\n//     while(guess != code){\r\n//         let whites = 0\r\n//         let blacks = 0\r\n        \r\n//         while(validate(guess, code) == false){\r\n//             guess = prompt(\"Try Again: \")\r\n//         }\r\n\r\n//         for(let i = 0; i < code.length; i++){\r\n//             if(guess.includes(code[i])){\r\n//                 whites++\r\n//             }\r\n//             if(guess[i] === code[i]){\r\n//                 blacks++\r\n//             }\r\n//         }\r\n//         //if we have blacks, we dont need to count them as whites as well\r\n//         whites = whites - blacks\r\n//         tries--\r\n//         console.log(\"Whites: \" + whites)\r\n//         console.log(\"Blacks: \" + blacks)\r\n//         if(tries === 0){\r\n//             console.log(\"Sorry, you didn't guess the code in 10 tries!\")\r\n//             console.log(\"The code was \" + code + \", \" + translateCode(code))\r\n//             return\r\n//         }\r\n//         console.log(\"Tries left: \" + tries)\r\n//         guess = prompt(\"Guess: \").trim()\r\n//     }\r\n//     console.log(\"Congrats you guessed \" + translateCode(code))\r\n//     return\r\n// }\r\n\r\n"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAIC,MAAM,IAAK;EAClC,IAAIC,IAAI,GAAG,EAAE;EACb,OAAMA,IAAI,CAACC,MAAM,IAAI,CAAC,EAAC;IACnB,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGN,MAAM,CAACE,MAAM,CAAC;IACpD,IAAG,CAACD,IAAI,CAACM,QAAQ,CAACP,MAAM,CAACG,IAAI,CAAC,CAAC,EAAC;MAC5BF,IAAI,IAAID,MAAM,CAACG,IAAI,CAAC;IACxB;EACJ;EACA,OAAOF,IAAI;AACf,CAAC;AAED,OAAO,MAAMO,aAAa,GAAIP,IAAI,IAAK;EACnC,IAAIQ,cAAc,GAAG,EAAE;EACvB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,IAAI,CAACC,MAAM,EAAEQ,CAAC,EAAE,EAAC;IAChC,QAAOT,IAAI,CAACS,CAAC,CAAC;MACV,KAAK,GAAG;QACJD,cAAc,CAACE,IAAI,CAAC,MAAM,CAAC;QAC3B;MACJ,KAAK,GAAG;QACJF,cAAc,CAACE,IAAI,CAAC,OAAO,CAAC;QAC5B;MACJ,KAAK,GAAG;QACJF,cAAc,CAACE,IAAI,CAAC,OAAO,CAAC;QAC5B;MACJ,KAAK,GAAG;QACJF,cAAc,CAACE,IAAI,CAAC,KAAK,CAAC;QAC1B;MACJ,KAAK,GAAG;QACJF,cAAc,CAACE,IAAI,CAAC,QAAQ,CAAC;QAC7B;MACJ,KAAK,GAAG;QACJF,cAAc,CAACE,IAAI,CAAC,QAAQ,CAAC;QAC7B;IAAM;EAElB;EACA,OAAOF,cAAc;AACzB,CAAC;AACD,OAAO,MAAMG,cAAc,GAAG,CAACC,IAAI,EAAEC,OAAO,KAAK;EAC7C,IAAIC,KAAK,GAAGX,IAAI,CAACY,KAAK,CAAC,CAAC,IAAKH,IAAI,GAAGC,OAAO,CAAE,GAAG,IAAI,CAAC,GAAG,GAAG;EAC3D,OAAOC,KAAK;AAChB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}